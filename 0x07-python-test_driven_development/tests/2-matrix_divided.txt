===========================
How to Use matrix_divided.py
===========================

This file has one function called ``matrix_divided()`` the function takes 2 arguments
	matrix (list of lists)
	div (integer)
	Reurns a new matrix by dividing each value of original `matrix` by `div`

Numbers
=======

``matrix_divided()`` returnns a new list of list where each valoe of dividex div.

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> og_matrix = [[1, 2, 3], [4, 5, 6]]

	>> print(matrix_divided(og_matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

it alsoworls if either div or matriv are float numbers

::

	>>> og_matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> print(matrix_divided(og_matrix, 3.0))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

in case div is a Zero

::

	>>> og_matrix = [[1, 2, 3], [4, 5, 6]]

	>>> print(matrix_divided(og_matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Different_Row_Size
==================

``matrix_divided()`` raises a TypeError with message "each row of matrix must have the same size

::

	>>> og_matrix = [[1, 2, 3, 4], [5, 6, 7]]

	>>> print(matrix_divided(og_matrix, 5))
	Traceback (most recent call last):
	TypeError: Each row of matrix must have the same size

Non-Numbers
============

``matrix_divided()`` raises TypeError if any argiment has a sting in it

::

	>>> og_matrix = [[1, 2, 3, 4], [5, 6, 7]]

	>>> print(matrix_divided(og_matrix, "one"))
	Traceback (most recent call last):
	TypeError: div must be a number

::

if the matix has a tring in it as a value, function raises an error

	>>> og_matrix = [["1", "2", "3"], ["4", "5", "6"]]

	>>> print(matrix_divided(og_matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
